jobs:
  deploy_dev:
    docker:
      - image: node:12
    steps:
      - checkout
      - run:
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          name: Configure NPM
      - run:
          command: yarn
          name: Install Dependencies
      - run:
          command: yarn build
          name: Build for Production
      - run:
          command: ln -s ~/bin/aws /usr/local/bin/
          name: Create Symlink for AWS CLI
      - aws-s3/copy:
          arguments: |
            --acl private \
            --content-type application/javascript
          from: dist/protect.min.js
          to: s3://protect-sdk-client/assets/js/protect-dev.min.js
  deploy_prod:
    docker:
      - image: node:12
    steps:
      - add_ssh_keys:
          fingerprints:
            - "03:a4:f7:67:d3:99:d1:d3:a1:91:25:c0:8c:09:dc:8e"
      - checkout
      - run:
          command: |
            set +eo pipefail
            if git log | head -n 2 | tail -n 1 | grep 'Author: CircleCI'; then
              circleci step halt
            fi
          name: Skip if CI Made the Last Commit
      - run:
          command: |
            git config user.email noreply@ns8.com
            git config user.name 'CircleCI'
          name: Setup Git
      - run:
          command: |
            yarn config set version-tag-prefix ''
            yarn version --patch
          name: Bump Version
      - run:
          command: |
            if ! git push -u origin master --follow-tags; then
              echo "Push failed. Please add this CircleCI deploy key to your repo with write access:"
              ssh-keygen -y -f ~/.ssh/id_rsa
              exit 1
            fi
          name: Tag Release in GitHub
  publish:
    docker:
      - image: node:12
    steps:
      - checkout
      - run:
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          name: Configure NPM
      - run:
          command: yarn
          name: Install Dependencies
      - run:
          command: yarn build
          name: Build for Production
      - run:
          command: yarn docs:publish
          name: Publish API to GitHub Pages
      - run:
          command: |
            version=$(node -p -e "require('./package.json').version")
            echo "export VERSION=$version" >> $BASH_ENV
          name: Get Version
      - run:
          command: ln -s ~/bin/aws /usr/local/bin/
          name: Create Symlink for AWS CLI
      - aws-s3/copy:
          arguments: |
            --acl private \
            --content-type application/javascript
          from: dist/protect.min.js
          to: s3://protect-sdk-client/assets/js/protect-${VERSION}.min.js
      - aws-s3/copy:
          arguments: |
            --acl private \
            --content-type application/javascript
          from: dist/protect.min.js
          to: s3://protect-sdk-client/assets/js/protect.min.js
      - run:
          command: npm publish
          name: Publish
  test:
    docker:
      - image: node:12
    steps:
      - checkout
      - run:
          command: |
            set +eo pipefail
            if git log | head -n 2 | tail -n 1 | grep 'Author: CircleCI'; then
              circleci step halt
            fi
          name: Skip if CI Made the Last Commit
      - run:
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          name: Configure NPM
      - run:
          command: yarn
          name: Install Dependencies
      - run:
          command: yarn lint
          name: Lint
      - run:
          command: yarn test
          name: Run Tests

orbs:
  aws-s3: circleci/aws-s3@1.0.15

version: 2.1

workflows:
  publish:
    jobs:
      - publish:
          type: approval
          filters:
            branches:
              only: master
  test_and_deploy:
    jobs:
      - test:
          filters:
            branches:
              ignore: gh-pages
      - deploy_dev:
          filters:
            branches:
              only: master
          requires:
            - test
      - deploy_prod:
          filters:
            branches:
              only: master
          requires:
            - test
